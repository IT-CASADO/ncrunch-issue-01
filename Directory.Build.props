<Project>
	<PropertyGroup>
		<IsPackable>false</IsPackable>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<RunAnalyzers>true</RunAnalyzers>
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
	</PropertyGroup>
	<PropertyGroup Condition="'$(CI)' == ''">
		<UseArtifactsOutput>true</UseArtifactsOutput>
		<ArtifactsPath>$(MSBuildThisFileDirectory)..\SolutionsArtifacts</ArtifactsPath>
	</PropertyGroup>
	<!--
		To use dotnet ef 'UseArtifactsOutput'
		see here: https://github.com/dotnet/efcore/issues/23853#issuecomment-2183607932
	-->
	<Import
		Condition="Exists('$(MSBuildProjectDirectory)\obj\$(MSBuildProjectFile).EntityFrameworkCore.targets')"
		Project="$(MSBuildProjectDirectory)\obj\$(MSBuildProjectFile).EntityFrameworkCore.targets"
	/>
	<PropertyGroup Condition="$(AssemblyName.EndsWith('.Test')) Or $(AssemblyName.EndsWith('.IntegrationTest'))">
		<OutputType>Exe</OutputType>
		<TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>
	</PropertyGroup>
	<ItemGroup Condition="$(AssemblyName.EndsWith('.Test')) Or $(AssemblyName.EndsWith('.IntegrationTest'))">
		<PackageReference Include="coverlet.msbuild">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.NET.Test.Sdk" />
		<PackageReference Include="xunit.analyzers" />
		<PackageReference Include="xunit.v3" />
		<PackageReference Include="xunit.runner.visualstudio">
			<IncludeAssets>all</IncludeAssets>
			<PrivateAssets>none</PrivateAssets>
		</PackageReference>
	</ItemGroup>
	<ItemGroup>
		<InternalsVisibleTo Include="DynamicProxyGenAssembly2" />
	</ItemGroup>
</Project>
